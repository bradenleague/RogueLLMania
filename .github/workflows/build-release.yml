name: Build Electron App

on:
  push:
    branches: [ main, development ]
    tags: [ "v*" ]
  pull_request:
    branches: [ main, development ]

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node: [20]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Prepare icons (macOS)
        if: runner.os == 'macOS'
        shell: bash
        run: |
          set -e
          SRC=assets/icon-source.png
          ICONSET=assets/icon.iconset
          if [ ! -f "$SRC" ]; then echo "missing $SRC"; exit 1; fi
          rm -rf "$ICONSET" && mkdir -p "$ICONSET"
          # base sizes
          for BASE in 16 32 128 256 512; do
            sips -z $BASE $BASE "$SRC" --out "$ICONSET/icon_${BASE}x${BASE}.png" >/dev/null
          done
          # retina counterparts (2x of base)
          for BASE in 16 32 128 256 512; do
            DOUBLE=$((BASE * 2))
            sips -z $DOUBLE $DOUBLE "$SRC" --out "$ICONSET/icon_${BASE}x${BASE}@2x.png" >/dev/null
          done
          iconutil -c icns "$ICONSET" -o assets/icon.icns
          rm -rf "$ICONSET"

      - name: Prepare icons (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          set -e
          npx png-to-ico assets/icon-source.png > assets/icon.ico

      - name: Prepare icons (Linux)
        if: runner.os == 'Linux'
        run: cp assets/icon-source.png assets/icon.png

      - name: Build Electron app
        run: npm run build
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-build-${{ matrix.os }}
          path: |
            dist/*.dmg
            dist/*.pkg
            dist/*.zip
            dist/*.exe
            dist/*.msi
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm

      - name: Release (tag builds)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          generate_release_notes: true
          files: |
            dist/*.dmg
            dist/*.zip
            dist/*.exe
            dist/*.msi
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
            dist/*.snap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
